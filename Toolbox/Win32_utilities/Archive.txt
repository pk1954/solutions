	Hertz CalcActionFrequency(microseconds us, DWORD dwCount = 1) const
	{
		static unsigned long long MICROSECONDS_TO_HERTZ_FACTOR = microseconds::period::den;
		if (us == microseconds::zero())
			return 0_Hertz;

		assert(dwCount < ULLONG_MAX / MICROSECONDS_TO_HERTZ_FACTOR);    // avoid ull overflow
		unsigned long long ullFrequency = (dwCount * MICROSECONDS_TO_HERTZ_FACTOR) / us.count();
		return Hertz(Cast2Long(ullFrequency));
	}

	Hertz GetMeasuredPerformance()
	{
		m_hrtimerOverall.AfterAction();
		microseconds usOverallTime = m_hrtimerOverall.GetAccActionTime();
		Hertz        result        = CalcActionFrequency(usOverallTime, m_hrtimerOverall.GetNrOfActions());
		m_hrtimerOverall.Reset();
		return result;
	}

	microseconds GetSingleActionTime() const
	{
		return PerfCounter::TicksToMicroseconds(m_ticksSingleAction);
	}

